# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

      # docker build and push
      - uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{secrets.DOCKER_USERNAME}}/backend_of_university_management:${{github.sha}}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: testcluster
          resource-group: TEST

      # Create K8s secrets to pull images
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1.1
        with:
          container-registry-url: https://hub.docker.com/repository/docker/purbo75/backend_of_university_management
          container-registry-username: "${{secrets.DOCKER_USERNAME}}"
          container-registry-password: "${{secrets.DOCKER_PASSWORD}}"
          secret-type: docker-registry
          secret-name: docker-image-pull-secret

        # Deploy to k8s cluster
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/backend-deployment.yml
            k8s/backend-service.yml
            k8s/ingress-service.yml
          images: ${{secrets.DOCKER_USERNAME}}/backend_of_university_management:${{github.sha}}
          imagepullsecrets: docker-image-pull-secret
          action: deploy
